<%- include('../user/partials/header') %>
<%- include('../user/partials/head') %>

<div class="min-h-screen bg-gray-50 py-12">
  <div class="container mx-auto px-4 max-w-4xl">
    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
      <!-- Failure Header with Illustration -->
      <div class="bg-gradient-to-r from-red-600 to-red-800 py-10 px-6 text-center relative">
        <div class="absolute top-0 left-0 w-full h-full opacity-10">
          <!-- You can change this SVG to any failure illustration you like -->
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200" class="w-full h-full">
            <path fill="#FFFFFF" d="M100 20a80 80 0 1 0 80 80A80.09 80.09 0 0 0 100 20zm40 110a8 8 0 0 1-11.31 0L100 91.31 71.31 130.7a8 8 0 1 1-11.31-11.31L88.69 80 60 51.31a8 8 0 1 1 11.31-11.31L100 68.69l28.69-28.7a8 8 0 1 1 11.31 11.31L111.31 80l28.69 28.69a8 8 0 0 1 0 11.31z"/>
          </svg>
        </div>
        
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-24 h-24 mx-auto mb-4 text-white">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
        
        <h1 class="text-4xl font-bold text-white mb-2">Payment Failed!</h1>
        <p class="text-red-100 text-lg">We are sorry, your payment could not be processed.</p>
      </div>
      
      <!-- Failure Details and Actions -->
      <div class="p-8">
        <div class="text-center mb-8">
          <h2 class="text-2xl font-semibold text-gray-800 mb-3">Order #<span class="text-red-600"><%= orderId %></span></h2>
          <p class="text-gray-600">Please try to pay again or view your order details for more information.</p>
        </div>
        
        <!-- Action Buttons -->
        <div class="flex flex-col md:flex-row gap-4 justify-center">
            <button id="retryPaymentBtn" data-orderid="<%= orderId %>" class="inline-flex items-center justify-center px-6 py-3 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200 text-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582M20 20v-5h-.581M5 19a9 9 0 0114-9M19 5a9 9 0 00-14 9" />
                </svg>
                Retry Payment
              </button>
              
          <a href="/user/order/detail/<%= orderId %>" class="inline-flex items-center justify-center px-6 py-3 border border-red-600 text-red-600 rounded-md hover:bg-red-50 transition-colors duration-200 text-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
            </svg>
            View Order Details
          </a>
        </div>
      </div>
    </div>
    
    <!-- Need Help Section -->
    <div class="mt-8 text-center">
      <p class="text-gray-600 mb-2">Need help with your order?</p>
      <a href="/user/contact-us" class="text-red-600 hover:underline font-medium">Contact our customer support</a>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.all.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
    document.getElementById('retryPaymentBtn').addEventListener('click',function(e){
        e.preventDefault()

        const orderId = this.getAttribute('data-orderid')
        fetch('/user/order/retry/<%= orderId %>', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
  })
  .then(res => res.json())
  .then(data => {
    if(data.success) {
      // Now trigger the Razorpay modal with the new details
      openRazorpayCheckout(data);
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Retry Failed',
        text: data.message || 'Unable to retry payment'
      });
    }
  })
  .catch(err => {
    console.error(err);
    Swal.fire({
      icon: 'error',
      title: 'Retry Error',
      text: 'An error occurred while retrying payment.'
    });
  });
    })

    function openRazorpayCheckout(orderData) {
  
   
  var options = {
    key: "<%= razorpayKey %>", // Replace with your actual Razorpay Key ID
    amount: orderData.amount,    // Amount should be in the smallest currency unit (e.g., paise)
    currency: orderData.currency, // Typically "INR"
    name: "BoomX",
    description: "Order Payment",
    order_id: orderData.razorpayOrderId, // The order ID returned by your backend/Razorpay API
    handler: function (response) {
      console.log("Payment successful:", response);
      // Optionally, call your backend endpoint here to verify the payment
      verifyPayment(response,orderData.orderId)
    },
    prefill: {
      name: "Customer Name",       // You can pre-fill the customer's info if available
      email: "customer@example.com",
      contact: "9999999999"
    },
    theme: {
      color: "#F37254"
    }
  };

  function verifyPayment(response, orderId) {
  fetch('/user/payment/verify', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(response)
  })
  .then(res => res.json())
  .then(data => {
    console.log("Verification response data:", data);
    if(data.success) {
      // Show success message and redirect after user confirmation
      Swal.fire({
        icon: 'success',
        title: 'Payment Successful',
        text: 'Your payment was verified successfully!'
      }).then(() => {
        window.location.href = '/user/order/confirmation/' + orderId;
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Verification Failed',
        text: data.message || 'Payment verification failed. Please contact support.'
      });
    }
  })
  .catch(err => {
    console.error('Verification error:', err);
    Swal.fire({
      icon: 'error',
      title: 'Verification Error',
      text: 'An error occurred during payment verification.'
    });
  });
}




  var rzp = new Razorpay(options);
  rzp.open();
}
</script>

<%- include('../user/partials/foot') %>
<%- include('../user/partials/footer') %>
