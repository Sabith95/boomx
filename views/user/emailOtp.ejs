<%- include('../user/partials/header') %>
<%- include('../user/partials/head') %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.all.min.js"></script>
  <style>
    .active-tab {
      background-color: #f3e8ff;
      color: #7e22ce;
      border-left: 4px solid #7e22ce;
    }
    
    /* OTP input styling */
    .otp-input {
      width: 3rem;
      height: 3rem;
      font-size: 1.5rem;
      text-align: center;
      border: 2px solid #d1d5db;
      border-radius: 0.5rem;
      outline: none;
      transition: all 0.2s;
    }
    
    .otp-input:focus {
      border-color: #7e22ce;
      box-shadow: 0 0 0 2px rgba(126, 34, 206, 0.2);
    }
  </style>
</head>
<body class="min-h-screen bg-gray-50">
  <!-- Header -->
  <header class="bg-purple-700 text-white p-6">
    <div class="container mx-auto">
      <div class="flex justify-between items-center">
        <h1 class="text-2xl font-bold">My Account</h1>
      </div>
    </div>
  </header>

  <main class="container mx-auto py-8 px-4">
    <div class="flex justify-center">
      <!-- Main Content Area -->
      <div class="w-full max-w-3xl">
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
          <div class="bg-purple-50 p-6 border-b border-purple-100">
            <div class="flex items-center gap-3">
              <!-- Lock icon SVG -->
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6 text-purple-600">
                <rect width="18" height="11" x="3" y="11" rx="2" ry="2"></rect>
                <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
              </svg>
              <h2 class="text-xl font-bold text-gray-800">Verify OTP</h2>
            </div>
          </div>
          
          <div class="p-6">
            <div>
              <h3 class="text-xl font-semibold text-gray-800 mb-4">Enter OTP Code</h3>
              <p class="text-gray-600 mb-6">
                We've sent a verification code. 
                Please enter the code below to verify your email address.
              </p>
              
              <form id="otpForm" class="space-y-6 max-w-md">
                <!-- OTP Input -->
                <div class="flex justify-between space-x-2">
                  <input type="text" maxlength="1" class="otp-input" data-index="1" autocomplete="off">
                  <input type="text" maxlength="1" class="otp-input" data-index="2" autocomplete="off">
                  <input type="text" maxlength="1" class="otp-input" data-index="3" autocomplete="off">
                  <input type="text" maxlength="1" class="otp-input" data-index="4" autocomplete="off">
                  <input type="text" maxlength="1" class="otp-input" data-index="5" autocomplete="off">
                  <input type="text" maxlength="1" class="otp-input" data-index="6" autocomplete="off">
                </div>
                
                <!-- Timer -->
                <div class="flex items-center justify-between">
                  <div class="text-sm text-gray-600">
                    Time remaining: <span id="timer" class="font-semibold text-purple-600">01:00</span>
                  </div>
                  <button type="button" id="resendBtn" class="text-sm text-purple-600 hover:text-purple-800 disabled:text-gray-400" disabled>
                    Resend OTP
                  </button>
                </div>
                
                <!-- Hidden fields -->
                <input type="hidden" id="completeOtp" name="otp">
                <input type="hidden" id="email" name="newEmail" value="">
                
                <!-- Buttons -->
                <div class="flex gap-4 pt-4">
                  <button type="button" id="verifyBtn" class="inline-flex items-center px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-md">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4 mr-2">
                      <path d="M20 6 9 17l-5-5"></path>
                    </svg>
                    Verify OTP
                  </button>
                  <a href="/user/account/<%= user._id %>?tab=profile" class="px-6 py-2 border border-gray-300 text-gray-700 hover:bg-gray-50 rounded-md">
                    Cancel
                  </a>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // OTP input handling
    const otpInputs = document.querySelectorAll('.otp-input');
    const completeOtpInput = document.getElementById('completeOtp');
    const verifyBtn = document.getElementById('verifyBtn');
    const resendBtn = document.getElementById('resendBtn');
    const timerElement = document.getElementById('timer');
    
    // Focus the first input on page load
    otpInputs[0].focus();
    
    // Handle OTP input auto-tabbing
    otpInputs.forEach((input, index) => {
      input.addEventListener('input', function(e) {
        const value = e.target.value;
        
        // Only allow numbers
        if (!/^\d*$/.test(value)) {
          e.target.value = '';
          return;
        }
        
        // Auto move to next input
        if (value && index < otpInputs.length - 1) {
          otpInputs[index + 1].focus();
        }
        
        // Update the complete OTP value
        updateCompleteOtp();
      });
      
      // Handle backspace key
      input.addEventListener('keydown', function(e) {
        if (e.key === 'Backspace' && !e.target.value && index > 0) {
          otpInputs[index - 1].focus();
        }
      });
    });
    
    function updateCompleteOtp() {
      let otp = '';
      otpInputs.forEach(input => {
        otp += input.value;
      });
      completeOtpInput.value = otp;
    }
    
    // Timer functionality
    let timeLeft = 60; // 1 minute in seconds
    
    function startTimer() {
      const timerInterval = setInterval(function() {
        timeLeft--;
        
        // Format the time
        const minutes = Math.floor(timeLeft / 60).toString().padStart(2, '0');
        const seconds = (timeLeft % 60).toString().padStart(2, '0');
        timerElement.textContent = `${minutes}:${seconds}`;
        
        // When timer reaches zero
        if (timeLeft <= 0) {
          clearInterval(timerInterval);
          resendBtn.disabled = false;
          timerElement.textContent = '00:00';
        }
      }, 1000);
    }
    
    // Start the timer when page loads
    startTimer();
    
    // Verify OTP button click handler
    verifyBtn.addEventListener('click', async function() {
      const otp = completeOtpInput.value;
      
      if (otp.length !== 6) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid OTP',
          text: 'Please enter a complete 6-digit OTP code.'
        });
        return;
      }
      
      try {
        const email = document.getElementById('email').value;
        
        // Get the token from localStorage or wherever it was stored
        const token = localStorage.getItem('otpToken');
        
        const response = await fetch('/user/account/edit-email/verify-otp/<%= user._id %>', {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            otp: otp,
            token: token
            // newEmail: email
          })
        });
        
        const result = await response.json();
        
        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Email Updated',
            text: 'Your email address has been updated successfully.'
          }).then(() => {
            window.location.href = '/user/login'
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Verification Failed',
            text: result.message || 'Invalid or expired OTP. Please try again.'
          });
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Something went wrong',
          text: 'Please try again later.'
        });
      }
    });
    
    // Resend OTP button click handler
    resendBtn.addEventListener('click', async function() {
      try {
     
        const password = localStorage.getItem('userPassword');
        const email = localStorage.getItem('userEmail');
        
       
        
        const response = await fetch('/user/account/edit-email/send-otp/<%= user._id %>', {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email:  email,
            password: password
          })
        });
        
        const result = await response.json();
        
        if (response.ok) {
          // Store the new token
          if (result.token) {
            localStorage.setItem('otpToken', result.token);
          }
          
          // Reset the timer
          timeLeft = 60;
          resendBtn.disabled = true;
          startTimer();
          
          // Clear the OTP input fields
          otpInputs.forEach(input => {
            input.value = '';
          });
          otpInputs[0].focus();
          
          Swal.fire({
            icon: 'success',
            title: 'OTP Resent',
            text: 'A new OTP has been sent to your email address.'
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: result.message || 'There was an error sending the OTP. Please try again later.'
          });
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Something went wrong',
          text: 'Please try again later.'
        });
      }
    });
  });
</script>
  
<%- include('../user/partials/foot') %>
<%- include('../user/partials/footer') %>